@model SnowStoreWeb.Models.Product

@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Chỉnh sửa sản phẩm";
}

<div class="container-fluid">
    <h2>Chỉnh sửa sản phẩm</h2>
    <hr />

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }

    <div class="row">
        <div class="col-md-8">
            <form asp-action="Edit" method="post" enctype="multipart/form-data" id="editProductForm">
                <input type="hidden" asp-for="ProductId" />
                <input type="hidden" asp-for="CreatedDate" />
                <input type="hidden" asp-for="ImageUrl" />

                <!-- Hidden inputs for deleted image IDs -->
                <div id="deletedImageInputs"></div>

                <div class="card">
                    <div class="card-header">
                        <h5>Thông tin cơ bản</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label asp-for="CategoryId" class="form-label">Danh mục</label>
                                    <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.CategoryId">
                                        <option value="">-- Chọn danh mục --</option>
                                    </select>
                                    <span asp-validation-for="CategoryId" class="text-danger"></span>
                                </div>

                                <div class="form-group mb-3">
                                    <label asp-for="Name" class="form-label">Tên sản phẩm</label>
                                    <input asp-for="Name" class="form-control" />
                                    <span asp-validation-for="Name" class="text-danger"></span>
                                </div>

                                <div class="form-group mb-3">
                                    <label asp-for="Price" class="form-label">Giá</label>
                                    <input asp-for="Price" class="form-control" type="number" step="0.01" />
                                    <span asp-validation-for="Price" class="text-danger"></span>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label asp-for="StockQuantity" class="form-label">Số lượng tồn kho</label>
                                    <input asp-for="StockQuantity" class="form-control" type="number" />
                                    <span asp-validation-for="StockQuantity" class="text-danger"></span>
                                </div>

                                <div class="form-group mb-3">
                                    <div class="form-check">
                                        <input type="checkbox" name="IsHot" id="IsHot" class="form-check-input" value="true" @(Model.IsHot == true ? "checked" : "") />
                                        <input type="hidden" name="IsHot" value="false" />
                                        <label for="IsHot" class="form-check-label">Sản phẩm hot</label>
                                    </div>
                                </div>

                                <div class="form-group mb-3">
                                    <div class="form-check">
                                        <input type="checkbox" name="IsBestSeller" id="IsBestSeller" class="form-check-input" value="true" @(Model.IsBestSeller == true ? "checked" : "") />
                                        <input type="hidden" name="IsBestSeller" value="false" />
                                        <label for="IsBestSeller" class="form-check-label">Sản phẩm bán chạy</label>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="Description" class="form-label">Mô tả</label>
                            <textarea asp-for="Description" class="form-control" rows="4"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="card mt-3">
                    <div class="card-header">
                        <h5>Ảnh sản phẩm</h5>
                    </div>
                    <div class="card-body">
                        <!-- Ảnh chính -->
                        <div class="form-group mb-4">
                            <label for="MainImageFile" class="form-label">Ảnh chính</label>
                            <input type="file" name="MainImageFile" id="MainImageFile" class="form-control" accept="image/*" />
                            <small class="text-muted">Chấp nhận: JPG, JPEG, PNG, GIF. Tối đa 5MB.</small>

                            <div class="mt-3">
                                @if (!string.IsNullOrEmpty(Model.ImageUrl))
                                {
                                    <div class="current-main-image">
                                        <p class="mb-2"><strong>Ảnh chính hiện tại:</strong></p>
                                        <img src="@Model.ImageUrl" alt="Ảnh chính" class="img-thumbnail" style="max-width: 200px;" />
                                    </div>
                                }
                                <div id="mainImagePreview" class="mt-2" style="display: none;">
                                    <p class="mb-2"><strong>Ảnh chính mới:</strong></p>
                                    <img id="mainPreviewImg" src="#" alt="Preview" class="img-thumbnail" style="max-width: 200px;" />
                                </div>
                            </div>
                        </div>

                        <!-- Ảnh phụ hiện tại -->
                        @if (Model.ProductImages != null && Model.ProductImages.Any())
                        {
                            <div class="form-group mb-4">
                                <label class="form-label">Ảnh phụ hiện tại</label>
                                <small class="text-muted d-block">Kéo thả để thay đổi thứ tự</small>

                                <div id="sortableImages" class="d-flex flex-wrap gap-3 mt-2">
                                    @foreach (var image in Model.ProductImages.OrderBy(i => i.SortOrder))
                                    {
                                        <div class="sortable-image card" data-image-id="@image.ImageId" style="width: 180px;">
                                            <img src="@image.ImageUrl" class="card-img-top" alt="Ảnh phụ" style="height: 150px; object-fit: cover;" />
                                            <div class="card-body p-2">
                                                <div class="btn-group w-100">
                                                    <button type="button" class="btn btn-primary btn-sm" onclick="setMainImage(@image.ImageId, '@image.ImageUrl')">
                                                        Làm ảnh chính
                                                    </button>
                                                    <button type="button" class="btn btn-danger btn-sm delete-image-btn" data-image-id="@image.ImageId">
                                                        Xóa
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }

                        <!-- Upload ảnh phụ mới -->
                        <div class="form-group mb-3">
                            <label for="AdditionalImageFiles" class="form-label">Thêm ảnh phụ</label>
                            <input type="file" name="AdditionalImageFiles" id="AdditionalImageFiles" class="form-control" accept="image/*" multiple />
                            <small class="text-muted">Chọn nhiều ảnh. Tối đa 5 ảnh phụ. Mỗi ảnh tối đa 5MB.</small>

                            <div id="additionalImagePreview" class="d-flex flex-wrap gap-2 mt-3"></div>
                        </div>
                    </div>
                </div>

                <div class="mt-4">
                    <button type="submit" class="btn btn-success btn-lg me-2">
                        <i class="fas fa-save"></i> Lưu thay đổi
                    </button>
                    <a asp-action="Index" class="btn btn-secondary btn-lg">
                        <i class="fas fa-arrow-left"></i> Quay lại
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js"></script>
    <script>
        // Biến lưu trữ IDs của ảnh sẽ xóa
        let deletedImageIds = [];

        // Preview ảnh chính
        document.getElementById('MainImageFile').addEventListener('change', function (e) {
            const file = e.target.files[0];
            const preview = document.getElementById('mainImagePreview');
            const previewImg = document.getElementById('mainPreviewImg');

            if (file) {
                if (file.size > 5 * 1024 * 1024) {
                    alert('Ảnh không được lớn hơn 5MB');
                    e.target.value = '';
                    preview.style.display = 'none';
                    return;
                }

                const reader = new FileReader();
                reader.onload = function (e) {
                    previewImg.src = e.target.result;
                    preview.style.display = 'block';
                };
                reader.readAsDataURL(file);
            } else {
                preview.style.display = 'none';
            }
        });

        // Preview ảnh phụ
        document.getElementById('AdditionalImageFiles').addEventListener('change', function (e) {
            const files = Array.from(e.target.files);
            const previewContainer = document.getElementById('additionalImagePreview');
            previewContainer.innerHTML = '';

            if (files.length > 5) {
                alert('Chỉ được chọn tối đa 5 ảnh phụ');
                e.target.value = '';
                return;
            }

            files.forEach(file => {
                if (file.size > 5 * 1024 * 1024) {
                    alert('Ảnh không được lớn hơn 5MB');
                    e.target.value = '';
                    previewContainer.innerHTML = '';
                    return;
                }

                const reader = new FileReader();
                reader.onload = function (e) {
                    const div = document.createElement('div');
                    div.className = 'text-center';
                    div.innerHTML = `<img src="${e.target.result}" class="img-thumbnail" style="max-width: 100px; max-height: 100px;" alt="Preview">`;
                    previewContainer.appendChild(div);
                };
                reader.readAsDataURL(file);
            });
        });

        // Xóa ảnh phụ
        document.querySelectorAll('.delete-image-btn').forEach(btn => {
            btn.addEventListener('click', function () {
                const imageId = parseInt(this.dataset.imageId);
                const imageContainer = this.closest('.sortable-image');

                if (confirm('Bạn có chắc muốn xóa ảnh này?')) {
                    // Thêm vào danh sách xóa
                    if (!deletedImageIds.includes(imageId)) {
                        deletedImageIds.push(imageId);

                        // Tạo hidden input
                        const input = document.createElement('input');
                        input.type = 'hidden';
                        input.name = 'DeletedImageIds';
                        input.value = imageId;
                        document.getElementById('deletedImageInputs').appendChild(input);
                    }

                    // Ẩn ảnh
                    imageContainer.style.opacity = '0.5';
                    imageContainer.style.position = 'relative';

                    // Thêm overlay "Đã xóa"
                    const overlay = document.createElement('div');
                    overlay.className = 'deleted-overlay';
                    overlay.style.cssText = `
                                position: absolute; top: 0; left: 0; right: 0; bottom: 0;
                                background: rgba(255,0,0,0.8); color: white;
                                display: flex; align-items: center; justify-content: center;
                                font-weight: bold; border-radius: 0.375rem;
                            `;
                    overlay.innerHTML = 'ĐÃ XÓA';
                    imageContainer.appendChild(overlay);

                    // Thay đổi nút xóa thành hoàn tác
                    this.innerHTML = 'Hoàn tác';
                    this.className = 'btn btn-warning btn-sm';
                    this.onclick = function () { undoDelete(imageId, this); };
                }
            });
        });

        // Hoàn tác xóa ảnh
        function undoDelete(imageId, btn) {
            const imageContainer = btn.closest('.sortable-image');

            // Xóa khỏi danh sách xóa
            const index = deletedImageIds.indexOf(imageId);
            if (index > -1) {
                deletedImageIds.splice(index, 1);
            }

            // Xóa hidden input
            const input = document.querySelector(`input[name="DeletedImageIds"][value="${imageId}"]`);
            if (input) {
                input.remove();
            }

            // Khôi phục hiển thị
            imageContainer.style.opacity = '1';
            const overlay = imageContainer.querySelector('.deleted-overlay');
            if (overlay) {
                overlay.remove();
            }

            // Khôi phục nút xóa
            btn.innerHTML = 'Xóa';
            btn.className = 'btn btn-danger btn-sm delete-image-btn';
            btn.onclick = function () {
                const imageId = parseInt(this.dataset.imageId);
                const imageContainer = this.closest('.sortable-image');
                // Gọi lại logic xóa
                this.click();
            };
        }

        // Đặt ảnh phụ làm ảnh chính
        function setMainImage(imageId, imageUrl) {
            if (!confirm('Đặt ảnh này làm ảnh chính? Ảnh sẽ được xóa khỏi danh sách ảnh phụ.')) {
                return;
            }

            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

            fetch('/AdminProducts/SetMainImage', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': token
                },
                body: JSON.stringify({
                    productId: @Model.ProductId,
                    imageId: imageId,
                    imageUrl: imageUrl
                })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Đã đặt làm ảnh chính thành công!');
                        location.reload();
                    } else {
                        alert('Lỗi: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Có lỗi xảy ra khi đặt ảnh chính');
                });
        }

        // Kéo thả để sắp xếp ảnh phụ
        const sortableContainer = document.getElementById('sortableImages');
        if (sortableContainer) {
            new Sortable(sortableContainer, {
                animation: 150,
                ghostClass: 'sortable-ghost',
                onEnd: function (evt) {
                    const imageIds = Array.from(sortableContainer.children)
                        .map(item => parseInt(item.dataset.imageId))
                        .filter(id => !deletedImageIds.includes(id));

                    const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

                    fetch('/AdminProducts/UpdateImageOrder', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': token
                        },
                        body: JSON.stringify({ imageIds: imageIds })
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (!data.success) {
                                alert('Lỗi cập nhật thứ tự: ' + data.message);
                                location.reload();
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            alert('Có lỗi xảy ra khi cập nhật thứ tự');
                            location.reload();
                        });
                }
            });
        }

        // Make functions global
        window.setMainImage = setMainImage;
        window.undoDelete = undoDelete;
    </script>

    <style>
        .sortable-image {
            cursor: move;
            transition: all 0.2s ease;
        }

            .sortable-image:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(0,0,0,0.2);
            }

        .sortable-ghost {
            opacity: 0.5;
            background: #e9ecef;
        }

        .deleted-overlay {
            pointer-events: none;
        }

        .current-main-image img {
            border: 2px solid #28a745;
        }

        .btn-group .btn {
            font-size: 0.75rem;
        }

        .card-img-top {
            cursor: move;
        }
    </style>
}