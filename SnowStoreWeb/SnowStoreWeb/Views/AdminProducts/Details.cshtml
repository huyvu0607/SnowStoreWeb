@model SnowStoreWeb.Models.Product
@using System.Text.Encodings.Web
@using SnowStoreWeb.Extensions

@{
    ViewData["Title"] = "Chi Tiết Sản Phẩm";
    Layout = "_AdminLayout";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">

<div class="container-fluid py-4">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm bg-primary text-white">
                <div class="card-header bg-warning text-dark">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h4 class="mb-1">
                                <i class="fas fa-box-open me-2"></i>
                                Chi Tiết Sản Phẩm #@Model.ProductId
                            </h4>
                            <small class="opacity-75">Thông tin chi tiết sản phẩm</small>
                        </div>
                        <div>
                            <a asp-action="Index" class="btn btn-light btn-sm me-2">
                                <i class="fas fa-arrow-left me-1"></i> Danh sách
                            </a>
                            <a asp-action="Edit" asp-route-id="@Model.ProductId" class="btn btn-warning btn-sm me-2">
                                <i class="fas fa-edit me-1"></i> Sửa
                            </a>
                            <button type="button" class="btn btn-danger btn-sm" onclick="confirmDelete()">
                                <i class="fas fa-trash me-1"></i> Xóa
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Left Column - Product Images -->
        <div class="col-lg-7 mb-4">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-white border-bottom">
                    <h6 class="mb-0">
                        <i class="fas fa-images me-2"></i>Hình Ảnh Sản Phẩm
                    </h6>
                </div>
                <div class="card-body p-3">
                    <!-- Main Image with better styling -->
                    <div class="main-image-container mb-3 position-relative">
                        @if (!string.IsNullOrEmpty(Model.ImageUrl))
                        {
                            <div class="main-image-wrapper">
                                <img id="mainImage" src="@Model.ImageUrl" alt="@Model.Name"
                                     class="img-fluid rounded main-product-image" 
                                     onclick="openImageModal('@Model.ImageUrl')" />
                                <div class="image-overlay">
                                    <button class="btn btn-light btn-sm zoom-btn">
                                        <i class="fas fa-search-plus"></i>
                                    </button>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="no-image-placeholder bg-light rounded d-flex align-items-center justify-content-center" style="height: 350px;">
                                <div class="text-muted text-center">
                                    <i class="fas fa-image fa-3x mb-2"></i>
                                    <p class="mb-0">Không có hình ảnh</p>
                                </div>
                            </div>
                        }
                    </div>

                    <!-- Enhanced Thumbnail Gallery -->
                    @if ((Model.ProductImages != null && Model.ProductImages.Any()) || !string.IsNullOrEmpty(Model.ImageUrl))
                    {
                        <div class="thumbnail-gallery">
                            <div class="gallery-header mb-2">
                                <small class="text-muted">
                                    <i class="fas fa-images me-1"></i>
                                    Gallery (@((Model.ProductImages?.Count ?? 0) + (!string.IsNullOrEmpty(Model.ImageUrl) ? 1 : 0)) ảnh) - Click để xem
                                </small>
                            </div>
                            <div class="d-flex flex-wrap gap-2">
                                @if (!string.IsNullOrEmpty(Model.ImageUrl))
                                {
                                    <div class="gallery-item-wrapper">
                                        <img src="@Model.ImageUrl" alt="Main Image"
                                             class="gallery-thumb active"
                                             onclick="changeMainImage('@Model.ImageUrl', this)" />
                                        <span class="thumb-label">Chính</span>
                                    </div>
                                }
                                @if (Model.ProductImages != null && Model.ProductImages.Any())
                                {
                                    @foreach (var image in Model.ProductImages.OrderBy(x => x.SortOrder))
                                    {
                                        <div class="gallery-item-wrapper">
                                            <img src="@image.ImageUrl" alt="Image @image.SortOrder"
                                                 class="gallery-thumb"
                                                 onclick="changeMainImage('@image.ImageUrl', this)" />
                                            <span class="thumb-label">#@image.SortOrder</span>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Right Column - Product Information -->
        <div class="col-lg-5">
            <!-- Product Info Card -->
            <div class="card border-0 shadow-sm mb-3">
                <div class="card-header bg-white border-bottom">
                    <h6 class="mb-0 ">
                        <i class="fas fa-info-circle me-2"></i>Thông Tin Sản Phẩm
                    </h6>
                </div>
                <div class="card-body p-3">
                    <!-- Product Name -->
                    <h5 class="text-dark mb-3">@Html.DisplayFor(model => model.Name)</h5>
                    
                    <!-- Status Badges - Compact -->
                    <div class="mb-3">
                        @if (Model.IsHot == true)
                        {
                            <span class="badge bg-danger me-1">
                                <i class="fas fa-fire me-1"></i>Hot
                            </span>
                        }
                        @if (Model.IsBestSeller == true)
                        {
                            <span class="badge bg-warning text-dark me-1">
                                <i class="fas fa-star me-1"></i>Best Seller
                            </span>
                        }
                        @if (Model.StockQuantity > 0)
                        {
                            <span class="badge bg-success">
                                <i class="fas fa-check-circle me-1"></i>Còn @Model.StockQuantity sp
                            </span>
                        }
                        else
                        {
                            <span class="badge bg-danger">
                                <i class="fas fa-times-circle me-1"></i>Hết hàng
                            </span>
                        }
                    </div>

                    <!-- Product Details - Compact Grid -->
                    <div class="product-info-grid">
                        <div class="row g-2 mb-2">
                            <div class="col-4 text-muted small">ID:</div>
                            <div class="col-8">#@Model.ProductId</div>
                        </div>
                        <div class="row g-2 mb-2">
                            <div class="col-4 text-muted small">Danh mục:</div>
                            <div class="col-8">
                                @if (Model.Category != null)
                                {
                                    <span class="badge bg-info text-white">@Html.DisplayFor(model => model.Category.Name)</span>
                                }
                                else
                                {
                                    <span class="text-muted">Chưa có</span>
                                }
                            </div>
                        </div>
                        <div class="row g-2 mb-2">
                            <div class="col-4 text-muted small">Thương hiệu:</div>
                            <div class="col-8">
                                @if (Model.Brand != null)
                                {
                                    <span class="badge bg-secondary">@Html.DisplayFor(model => model.Brand.Name)</span>
                                }
                                else
                                {
                                    <span class="text-muted">Chưa có</span>
                                }
                            </div>
                        </div>
                        <div class="row g-2 mb-2">
                            <div class="col-4 text-muted small">Giá bán:</div>
                            <div class="col-8">
                                <strong class="text-success fs-5">@Html.DisplayFor(model => model.Price, "{0:N0}") ₫</strong>
                            </div>
                        </div>
                        <div class="row g-2 mb-2">
                            <div class="col-4 text-muted small">Tồn kho:</div>
                            <div class="col-8">@Model.StockQuantity sản phẩm</div>
                        </div>
                        <div class="row g-2">
                            <div class="col-4 text-muted small">Ngày tạo:</div>
                            <div class="col-8">
                                @if (Model.CreatedDate.HasValue)
                                {
                                    <span>@Model.CreatedDate.Value.ToString("dd/MM/yyyy")</span>
                                    <br><small class="text-muted">(@((DateTime.Now - Model.CreatedDate.Value).Days) ngày trước)</small>
                                }
                                else
                                {
                                    <span class="text-muted">Không xác định</span>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Description Card -->
            <div class="card border-0 shadow-sm mb-3">
                <div class="card-header bg-white border-bottom">
                    <h6 class="mb-0">
                        <i class="fas fa-align-left me-2 text-primary"></i>Mô tả sản phẩm
                    </h6>
                </div>
                <div class="card-body p-3">
                    @if (!string.IsNullOrEmpty(Model.Description))
                    {
                        <div class="description-content" style="white-space: pre-line; line-height: 1.6;">
                            @Model.Description
                        </div>
                    }
                    else
                    {
                        <div class="text-center text-muted py-4">
                            <i class="fas fa-file-alt fa-3x mb-3 opacity-50"></i>
                            <p class="mb-0 fw-light">Chưa có mô tả cho sản phẩm này</p>
                            <small class="text-muted">Mô tả sẽ được cập nhật sớm</small>
                        </div>
                    }
                </div>
            </div>

            <!-- Quick Stats -->
            <div class="card border-0 shadow-sm">
                <div class="card-body p-3">
                    <div class="row text-center">
                        <div class="col-4">
                            <div class="stat-item">
                                <div class="stat-number text-info">@((Model.ProductImages?.Count ?? 0) + (!string.IsNullOrEmpty(Model.ImageUrl) ? 1 : 0))</div>
                                <div class="stat-label small text-muted">Hình ảnh</div>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="stat-item">
                                <div class="stat-number text-warning">@Model.StockQuantity</div>
                                <div class="stat-label small text-muted">Tồn kho</div>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="stat-item">
                                <div class="stat-number text-success">@(Model.IsHot == true ? "Hot" : "Normal")</div>
                                <div class="stat-label small text-muted">Trạng thái</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Fullscreen Image Modal -->
<div id="imageModal" class="image-modal-overlay">
    <div class="image-modal-content">
        <!-- Close Button -->
        <button class="image-modal-close" onclick="closeImageModal()">
            <i class="fas fa-times"></i>
        </button>
        
        <!-- Main Image Container -->
        <div class="image-modal-main">
            <img id="modalImage" src="" alt="Product Image" />
            
            <!-- Navigation Arrows -->
            <button id="prevBtn" class="modal-nav-arrow modal-nav-prev" onclick="showPrevImage()">
                <i class="fas fa-chevron-left"></i>
            </button>
            <button id="nextBtn" class="modal-nav-arrow modal-nav-next" onclick="showNextImage()">
                <i class="fas fa-chevron-right"></i>
            </button>
        </div>
        
        <!-- Bottom Thumbnail Gallery -->
        <div class="image-modal-footer">
            <div class="modal-thumbnail-gallery" id="modalThumbnails">
                <!-- Thumbnails will be populated by JavaScript -->
            </div>
            <div class="image-counter">
                <span id="currentImageIndex">1</span> / <span id="totalImages">1</span>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    
    <script>
        let allImages = [];
        let currentImageIndex = 0;

        // Initialize
        document.addEventListener('DOMContentLoaded', function () {
            // Collect all images
            allImages = [];
            if ('@Model.ImageUrl' !== '') {
                allImages.push('@Model.ImageUrl');
            }
            @if (Model.ProductImages != null && Model.ProductImages.Any())
            {
                @foreach (var image in Model.ProductImages.OrderBy(x => x.SortOrder))
                {
                    <text>allImages.push('@image.ImageUrl');</text>
                }
            }

            // Update total images count
            document.getElementById('totalImages').textContent = allImages.length;
            
            // Hide nav buttons if only one image
            if (allImages.length <= 1) {
                document.getElementById('prevBtn').style.display = 'none';
                document.getElementById('nextBtn').style.display = 'none';
            }

            // Populate modal thumbnails
            populateModalThumbnails();
        });

        // Populate modal thumbnail gallery
        function populateModalThumbnails() {
            const thumbnailContainer = document.getElementById('modalThumbnails');
            thumbnailContainer.innerHTML = '';
            
            allImages.forEach((imageUrl, index) => {
                const thumbDiv = document.createElement('div');
                thumbDiv.className = 'modal-thumb-item';
                if (index === 0) thumbDiv.classList.add('active');
                
                const img = document.createElement('img');
                img.src = imageUrl;
                img.onclick = () => showImageAtIndex(index);
                
                thumbDiv.appendChild(img);
                thumbnailContainer.appendChild(thumbDiv);
            });
        }

        // Change main image when clicking thumbnail
        function changeMainImage(imageSrc, thumbnail) {
            const mainImage = document.getElementById('mainImage');
            if (mainImage) {
                // Smooth transition effect
                mainImage.style.opacity = '0.6';
                setTimeout(() => {
                    mainImage.src = imageSrc;
                    mainImage.style.opacity = '1';
                }, 150);
            }

            // Update active thumbnail
            document.querySelectorAll('.gallery-thumb').forEach(thumb => {
                thumb.classList.remove('active');
            });
            thumbnail.classList.add('active');
        }

        // Open fullscreen modal
        function openImageModal(imageSrc) {
            const modal = document.getElementById('imageModal');
            const modalImg = document.getElementById('modalImage');
            
            // Update current index
            currentImageIndex = allImages.indexOf(imageSrc);
            
            // Show modal
            modal.style.display = 'flex';
            document.body.style.overflow = 'hidden'; // Prevent background scrolling
            
            // Set image and update UI
            modalImg.src = imageSrc;
            updateModalUI();
            
            // Add show class for animation
            setTimeout(() => {
                modal.classList.add('show');
            }, 10);
        }

        // Close modal
        function closeImageModal() {
            const modal = document.getElementById('imageModal');
            modal.classList.remove('show');
            document.body.style.overflow = ''; // Restore scrolling
            
            setTimeout(() => {
                modal.style.display = 'none';
            }, 300);
        }

        // Show previous image
        function showPrevImage() {
            if (allImages.length > 1) {
                currentImageIndex = (currentImageIndex - 1 + allImages.length) % allImages.length;
                showImageAtIndex(currentImageIndex);
            }
        }

        // Show next image
        function showNextImage() {
            if (allImages.length > 1) {
                currentImageIndex = (currentImageIndex + 1) % allImages.length;
                showImageAtIndex(currentImageIndex);
            }
        }

        // Show image at specific index
        function showImageAtIndex(index) {
            currentImageIndex = index;
            document.getElementById('modalImage').src = allImages[index];
            updateModalUI();
        }

        // Update modal UI (counter and active thumbnail)
        function updateModalUI() {
            document.getElementById('currentImageIndex').textContent = currentImageIndex + 1;
            
            // Update active thumbnail
            document.querySelectorAll('.modal-thumb-item').forEach((thumb, index) => {
                thumb.classList.toggle('active', index === currentImageIndex);
            });
        }

        // Keyboard navigation for modal
        document.addEventListener('keydown', function(e) {
            const modal = document.getElementById('imageModal');
            if (modal.style.display === 'flex') {
                if (e.key === 'ArrowLeft') showPrevImage();
                if (e.key === 'ArrowRight') showNextImage();
                if (e.key === 'Escape') closeImageModal();
            }
        });

        // Close modal when clicking outside image
        document.getElementById('imageModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeImageModal();
            }
        });

        // Delete confirmation
        async function confirmDelete() {
            if (confirm('Bạn có chắc chắn muốn xóa sản phẩm "@JavaScriptEncoder.Default.Encode(Model.Name)" không?\n\nHành động này không thể hoàn tác!')) {
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = '@Url.Action("Delete", new { id = Model.ProductId })';
                
                const token = document.querySelector('input[name="__RequestVerificationToken"]');
                if (token) {
                    const tokenInput = document.createElement('input');
                    tokenInput.type = 'hidden';
                    tokenInput.name = '__RequestVerificationToken';
                    tokenInput.value = token.value;
                    form.appendChild(tokenInput);
                }
                
                document.body.appendChild(form);
                form.submit();
            }
        }
    </script>

    <style>
        /* Main product image styling */
        .main-image-wrapper {
            position: relative;
            background: #f8f9fa;
            border-radius: 8px;
            padding: 10px;
            border: 2px solid #e9ecef;
        }

        .main-product-image {
            min-height: 350px;
            min-width: 200px;
            object-fit: cover;
            cursor: pointer;
            transition: all 0.3s ease;
            border-radius: 6px;
        }

        .main-product-image:hover {
            transform: scale(1.02);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }

        .image-overlay {
            position: absolute;
            top: 20px;
            right: 20px;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .main-image-wrapper:hover .image-overlay {
            opacity: 1;
        }

        .zoom-btn {
            border-radius: 50%;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        }

        /* Enhanced thumbnail gallery */
        .thumbnail-gallery {
            background: #f8f9fa;
            padding: 15px;
            border-radius: 8px;
            border: 1px solid #e9ecef;
        }

        .gallery-header {
            padding-bottom: 8px;
            border-bottom: 1px solid #dee2e6;
        }

        .gallery-item-wrapper {
            position: relative;
            display: inline-block;
        }

        .gallery-thumb {
            width: 80px;
            height: 80px;
            object-fit: cover;
            cursor: pointer;
            border-radius: 6px;
            transition: all 0.3s ease;
            border: 3px solid transparent;
            opacity: 0.8;
        }

        .gallery-thumb:hover {
            opacity: 1;
            transform: scale(1.1);
            border-color: #0d6efd;
            box-shadow: 0 4px 12px rgba(13, 110, 253, 0.3);
        }

        .gallery-thumb.active {
            opacity: 1;
            border-color: #0d6efd;
            transform: scale(1.05);
            box-shadow: 0 4px 12px rgba(13, 110, 253, 0.4);
        }

        .thumb-label {
            position: absolute;
            bottom: -20px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 11px;
            color: #6c757d;
            background: rgba(255,255,255,0.9);
            padding: 2px 6px;
            border-radius: 3px;
            white-space: nowrap;
        }

        /* Fullscreen Modal Styling */
        .image-modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.95);
            z-index: 9999;
            display: none;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .image-modal-overlay.show {
            opacity: 1;
        }

        .image-modal-content {
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            position: relative;
        }

        .image-modal-close {
            position: absolute;
            top: 20px;
            right: 30px;
            background: none;
            border: none;
            color: white;
            font-size: 30px;
            cursor: pointer;
            z-index: 10;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .image-modal-close:hover {
            background: rgba(255, 255, 255, 0.1);
            transform: scale(1.1);
        }

        .image-modal-main {
            flex: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
            width: 100%;
            max-width: 90%;
        }

            .image-modal-main img {
                width: auto;
                height: 70vh;
                max-width: 56vh; /* 70vh * 4/5 = 56vh to maintain 4:5 ratio */
                object-fit: cover;
                aspect-ratio: 4/5;
                border-radius: 8px;
                box-shadow: 0 10px 40px rgba(0, 0, 0, 0.5);
            }

        .modal-nav-arrow {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            background: rgba(255, 255, 255, 0.2);
            border: none;
            color: white;
            width: 60px;
            height: 60px;
            border-radius: 50%;
            font-size: 24px;
            cursor: pointer;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .modal-nav-arrow:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: translateY(-50%) scale(1.1);
        }

        .modal-nav-prev {
            left: 30px;
        }

        .modal-nav-next {
            right: 30px;
        }

        .image-modal-footer {
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 15px;
        }

        .modal-thumbnail-gallery {
            display: flex;
            gap: 10px;
            justify-content: center;
            flex-wrap: wrap;
            max-width: 600px;
        }

        .modal-thumb-item {
            border: 3px solid transparent;
            border-radius: 8px;
            overflow: hidden;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .modal-thumb-item img {
            width: 60px;
            height: 60px;
            object-fit: cover;
            display: block;
        }

        .modal-thumb-item:hover {
            border-color: rgba(255, 255, 255, 0.5);
            transform: scale(1.1);
        }

        .modal-thumb-item.active {
            border-color: #007bff;
            transform: scale(1.1);
        }

        .image-counter {
            color: white;
            font-size: 16px;
            font-weight: 500;
            background: rgba(0, 0, 0, 0.5);
            padding: 8px 16px;
            border-radius: 20px;
            backdrop-filter: blur(10px);
        }

        /* Other existing styles */
        .product-info-grid {
            font-size: 0.95rem;
        }

        .stat-number {
            font-size: 1.2rem;
            font-weight: 600;
        }

        .stat-item {
            padding: 0.5rem;
        }

        .card {
            transition: transform 0.2s ease;
        }

        .card:hover {
            transform: translateY(-2px);
        }

        .badge {
            font-size: 0.75rem;
        }

        .btn-sm {
            padding: 0.25rem 0.75rem;
            font-size: 0.85rem;
        }

        /* Responsive adjustments */
        @@media (max-width: 768px) {
            .gallery-thumb {
                width: 60px;
                height: 60px;
            }
            
            .main-product-image {
                max-height: 250px;
            }
            
            .product-info-grid {
                font-size: 0.9rem;
            }

            .modal-nav-arrow {
                width: 50px;
                height: 50px;
                font-size: 20px;
            }

            .modal-nav-prev {
                left: 15px;
            }

            .modal-nav-next {
                right: 15px;
            }

            .image-modal-close {
                top: 15px;
                right: 15px;
                font-size: 24px;
                width: 40px;
                height: 40px;
            }

            .modal-thumb-item img {
                width: 50px;
                height: 50px;
            }

            .image-modal-main img {
                height: 60vh;
                max-width: 48vh; /* 60vh * 4/5 = 48vh to maintain 4:5 ratio on mobile */
            }
        }

        @@media (max-width: 576px) {
            .gallery-thumb {
                width: 50px;
                height: 50px;
            }

            .thumbnail-gallery {
                padding: 10px;
            }

            .main-image-wrapper {
                padding: 8px;
            }

            .modal-thumbnail-gallery {
                gap: 8px;
            }

            .modal-thumb-item img {
                width: 40px;
                height: 40px;
            }
        }
    </style>
}