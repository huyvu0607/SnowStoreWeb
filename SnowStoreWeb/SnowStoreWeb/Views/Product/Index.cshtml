@model IEnumerable<SnowStoreWeb.Models.Product>
@{
    ViewData["Title"] = "Danh sách sản phẩm";
    var categories = ViewBag.Categories as List<SnowStoreWeb.Models.Category> ?? new List<SnowStoreWeb.Models.Category>();
    var currentPage = ViewBag.CurrentPage ?? 1;
    var totalPages = ViewBag.TotalPages ?? 1;
    var currentCategory = ViewBag.CurrentCategory as string;
    var currentSort = ViewBag.CurrentSort as string;
}

<style>
.products-container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 20px;
}

.page-header {
    text-align: center;
    margin-bottom: 40px;
    padding: 40px 0;
    background: linear-gradient(135deg, #5DADE2 0%, #3498db 100%);
    border-radius: 20px;
    color: white;
    box-shadow: 0 10px 30px rgba(0,0,0,0.1);
}

.page-header h2 {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 10px;
    text-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.page-header p {
    font-size: 1.1rem;
    opacity: 0.9;
    margin: 0;
}

/* Search and Filter Section */
.search-filter-section {
    background: white;
    border-radius: 20px;
    padding: 30px;
    margin-bottom: 30px;
    box-shadow: 0 8px 25px rgba(0,0,0,0.08);
    border: 2px solid rgba(0,0,0,0.05);
}

.search-filter-header {
    display: flex;
    align-items: center;
    margin-bottom: 25px;
    gap: 12px;
}

.search-filter-header h4 {
    margin: 0;
    color: #2c3e50;
    font-weight: 700;
    font-size: 1.4rem;
}

.search-filter-header i {
    color: #5DADE2;
    font-size: 1.5rem;
}

.filter-form {
    display: grid;
    grid-template-columns: 2fr 1fr 1fr auto;
    gap: 20px;
    align-items: end;
}

.search-group {
    position: relative;
}

.search-input {
    width: 100%;
    padding: 15px 20px 15px 50px;
    border: 2px solid #e1e8ed;
    border-radius: 25px;
    font-size: 1rem;
    transition: all 0.3s ease;
    background: #f8f9fa;
}

.search-input:focus {
    outline: none;
    border-color: #5DADE2;
    background: white;
    box-shadow: 0 0 0 3px rgba(93, 173, 226, 0.1);
}

.search-icon {
    position: absolute;
    left: 18px;
    top: 50%;
    transform: translateY(-50%);
    color: #95a5a6;
    font-size: 1.1rem;
}

.filter-select {
    padding: 15px 20px;
    border: 2px solid #e1e8ed;
    border-radius: 15px;
    font-size: 1rem;
    background: #f8f9fa;
    cursor: pointer;
    transition: all 0.3s ease;
}

.filter-select:focus {
    outline: none;
    border-color: #5DADE2;
    background: white;
    box-shadow: 0 0 0 3px rgba(93, 173, 226, 0.1);
}

.search-btn {
    padding: 15px 25px;
    background: linear-gradient(135deg, #5DADE2 0%, #3498db 100%);
    color: white;
    border: none;
    border-radius: 15px;
    cursor: pointer;
    font-weight: 600;
    transition: all 0.3s ease;
    white-space: nowrap;
}

.search-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(93, 173, 226, 0.3);
}

.clear-filters-btn {
    padding: 15px 25px;
    background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);
    color: white;
    border: none;
    border-radius: 15px;
    cursor: pointer;
    font-weight: 600;
    transition: all 0.3s ease;
    white-space: nowrap;
    text-decoration: none;
    display: inline-block;
    text-align: center;
}

.clear-filters-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(231, 76, 60, 0.3);
    color: white;
}

/* Quick Search Suggestions */
.search-suggestions {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: white;
    border: 2px solid #e1e8ed;
    border-top: none;
    border-radius: 0 0 15px 15px;
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    max-height: 300px;
    overflow-y: auto;
    z-index: 1000;
    display: none;
}

.suggestion-item {
    padding: 12px 20px;
    cursor: pointer;
    border-bottom: 1px solid #f1f1f1;
    display: flex;
    align-items: center;
    gap: 10px;
    transition: background 0.2s ease;
}

.suggestion-item:hover {
    background: #f8f9fa;
}

.suggestion-item img {
    width: 40px;
    height: 40px;
    object-fit: cover;
    border-radius: 8px;
}

.suggestion-content {
    flex: 1;
}

.suggestion-name {
    font-weight: 600;
    color: #2c3e50;
    margin-bottom: 2px;
}

.suggestion-details {
    font-size: 0.85rem;
    color: #7f8c8d;
}

/* Results Info */
.results-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
    padding: 15px 0;
    border-bottom: 2px solid #ecf0f1;
}

.results-count {
    color: #7f8c8d;
    font-weight: 600;
}

.sort-options {
    display: flex;
    align-items: center;
    gap: 15px;
}

.sort-label {
    color: #7f8c8d;
    font-weight: 600;
}

.sort-select {
    padding: 8px 15px;
    border: 2px solid #e1e8ed;
    border-radius: 10px;
    background: white;
    cursor: pointer;
}

.product-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 25px;
    padding: 20px 0;
}

.product-card {
    background: white;
    border-radius: 20px;
    overflow: hidden;
    box-shadow: 0 8px 25px rgba(0,0,0,0.08);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    border: 2px solid rgba(0,0,0,0.05);
    aspect-ratio: 5/7;
    width: 100%;
}

.product-card:hover {
    transform: translateY(-10px);
    box-shadow: 0 20px 40px rgba(0,0,0,0.15);
}

.product-image-container {
    position: relative;
    overflow: hidden;
    height: 100%;
    background: linear-gradient(45deg, #f8f9fa, #e9ecef);
}

.product-image-container img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
}

.product-card:hover .product-image-container img {
    transform: scale(1.05);
}

.product-badges {
    position: absolute;
    top: 15px;
    left: -6px;
    display: flex;
    flex-direction: column;
    gap: 8px;
    z-index: 5;
}

.product-badges .badge {
    font-size: 0.7rem;
    padding: 5px 10px;
    border-radius: 20px;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.2);
}

.badge.bg-danger {
    background: #ff4444 !important;
    color: white !important;
}

.badge.bg-success {
    background: #ff6b35 !important;
    color: white !important;
}

.card-body {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    padding: 15px;
    backdrop-filter: blur(8px);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: 2;
    height: auto;
    max-height: 60px;
    overflow: hidden;
}

.product-card:hover .card-body {
    background: rgba(0, 0, 0, 0.85);
    backdrop-filter: blur(5px);
    padding: 15px;
    max-height: 150px;
    transform: translateY(0px);
}

.card-title {
    font-size: 1.45rem;
    font-weight: 700;
    background: linear-gradient(135deg, #FFD700, #FF8C00, #FF6347);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin-bottom: 0;
    line-height: 1.3;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    text-align: left;
    filter: drop-shadow(1px 1px 2px rgba(0,0,0,0.7)) drop-shadow(2px 2px 4px rgba(0,0,0,0.5));
}

.product-card:hover .card-title {
    background: linear-gradient(135deg, #fff, #f0f0f0);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    font-size: 1.1rem;
    margin-bottom: 10px;
    transform: translateY(-5px);
    filter: drop-shadow(1px 1px 3px rgba(0,0,0,0.8));
}

.product-price {
    font-size: 1.2rem;
    font-weight: 700;
    color: #ff6b6b;
    margin-bottom: 5px;
    transition: all 0.4s ease;
    opacity: 0;
    transform: translateY(10px);
}

.product-card:hover .product-price {
    opacity: 1;
    transform: translateY(0);
    transition-delay: 0.1s;
}

.product-category {
    color: rgba(255, 255, 255, 0.8);
    font-size: 0.85rem;
    display: flex;
    align-items: center;
    gap: 6px;
    margin-top: 5px;
    transition: all 0.4s ease;
    opacity: 0;
    transform: translateY(10px);
}

.product-card:hover .product-category {
    opacity: 1;
    transform: translateY(0);
    transition-delay: 0.2s;
}

.product-category i {
    color: #5DADE2;
}

.hover-button {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    opacity: 0;
    transition: all 0.3s ease;
    background: linear-gradient(135deg, #5DADE2 0%, #3498db 100%);
    color: white;
    padding: 10px 20px;
    border-radius: 25px;
    text-decoration: none;
    font-weight: 600;
    font-size: 0.85rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    box-shadow: 0 4px 15px rgba(93, 173, 226, 0.3);
    z-index: 3;
    white-space: nowrap; 
}

.product-card:hover .hover-button {
    opacity: 1;
}

.hover-button:hover {
    background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);
    color: white;
    transform: translate(-50%, -50%) translateY(-2px);
    box-shadow: 0 6px 20px rgba(93, 173, 226, 0.4);
}

/* Pagination */
.pagination-section {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 40px 0;
    gap: 20px;
}

.pagination {
    display: flex;
    gap: 8px;
    align-items: center;
}

.pagination a, .pagination span {
    padding: 12px 16px;
    text-decoration: none;
    border-radius: 10px;
    font-weight: 600;
    transition: all 0.3s ease;
    min-width: 45px;
    text-align: center;
}

.pagination a {
    background: white;
    color: #5DADE2;
    border: 2px solid #e1e8ed;
}

.pagination a:hover {
    background: #5DADE2;
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(93, 173, 226, 0.3);
}

.pagination .current {
    background: linear-gradient(135deg, #5DADE2 0%, #3498db 100%);
    color: white;
    border: 2px solid #5DADE2;
}

.pagination-info {
    color: #7f8c8d;
    font-weight: 600;
}

.empty-state {
    text-align: center;
    padding: 80px 20px;
    background: white;
    border-radius: 20px;
    box-shadow: 0 8px 25px rgba(0,0,0,0.08);
    margin: 40px 0;
    grid-column: 1 / -1;
}

.empty-state i {
    font-size: 4rem;
    color: #bdc3c7;
    margin-bottom: 20px;
    display: block;
}

.empty-state h4 {
    color: #7f8c8d;
    font-weight: 600;
    margin-bottom: 10px;
}

.empty-state p {
    color: #95a5a6;
    font-size: 1rem;
    margin: 0;
}

/* Responsive Design */
@@media (max-width: 768px) {
    .filter-form {
        grid-template-columns: 1fr;
        gap: 15px;
    }
    
    .results-info {
        flex-direction: column;
        gap: 15px;
        align-items: flex-start;
    }
    
    .search-filter-section {
        padding: 20px;
    }
    
    .search-input, .filter-select {
        padding: 12px 15px;
        padding-left: 45px;
    }
    
    .search-btn, .clear-filters-btn {
        width: 100%;
        padding: 12px 20px;
    }
}
</style>

<div class="products-container">
    <div class="page-header">
        <h2><i class="fas fa-boxes me-3"></i>Danh sách sản phẩm</h2>
        <p>Khám phá bộ sưu tập thời trang chất lượng cao của chúng tôi</p>
    </div>
    
    <!-- Search and Filter Section -->
    <div class="search-filter-section">
        <div class="search-filter-header">
            <i class="fas fa-search"></i>
            <h4>Tìm kiếm & Lọc sản phẩm</h4>
        </div>
        
        <form asp-action="Search" method="get" class="filter-form" id="searchForm">
            <div class="search-group">
                <i class="fas fa-search search-icon"></i>
                <input type="text" name="query" id="searchInput" class="search-input" 
                       placeholder="Nhập tên sản phẩm cần tìm..." 
                       value="@ViewBag.SearchQuery" autocomplete="off">
                <div class="search-suggestions" id="searchSuggestions"></div>
            </div>
            
            <select name="category" class="filter-select">
                <option value="">Tất cả danh mục</option>
                @foreach (var category in categories)
                {
                    @if (currentCategory == category.Name)
                    {
                        <option value="@category.Name" selected>@category.Name</option>
                    }
                    else
                    {
                        <option value="@category.Name">@category.Name</option>
                    }
                }
            </select>
            
            <select name="sortBy" class="filter-select">
                <option value="">Sắp xếp mặc định</option>
                @if (currentSort == "name_asc")
                {
                    <option value="name_asc" selected>Tên A-Z</option>
                }
                else
                {
                    <option value="name_asc">Tên A-Z</option>
                }
                
                @if (currentSort == "name_desc")
                {
                    <option value="name_desc" selected>Tên Z-A</option>
                }
                else
                {
                    <option value="name_desc">Tên Z-A</option>
                }
                
                @if (currentSort == "price_asc")
                {
                    <option value="price_asc" selected>Giá thấp đến cao</option>
                }
                else
                {
                    <option value="price_asc">Giá thấp đến cao</option>
                }
                
                @if (currentSort == "price_desc")
                {
                    <option value="price_desc" selected>Giá cao đến thấp</option>
                }
                else
                {
                    <option value="price_desc">Giá cao đến thấp</option>
                }
                
                @if (currentSort == "newest")
                {
                    <option value="newest" selected>Mới nhất</option>
                }
                else
                {
                    <option value="newest">Mới nhất</option>
                }
            </select>
            
            <div style="display: flex; gap: 10px;">
                <button type="submit" class="search-btn">
                    <i class="fas fa-search me-2"></i>Tìm kiếm
                </button>
                
                <a asp-action="Index" class="clear-filters-btn">
                    <i class="fas fa-times me-2"></i>Xóa bộ lọc
                </a>
            </div>
        </form>
    </div>
    
    <!-- Results Info -->
    <div class="results-info">
        <div class="results-count">
            Hiển thị <strong>@Model.Count()</strong> sản phẩm
            @if (!string.IsNullOrEmpty(currentCategory))
            {
                <span> trong danh mục "<strong>@currentCategory</strong>"</span>
            }
        </div>
    </div>
    
    <div class="product-grid">
        @foreach (var item in Model)
        {
            <div class="product-card">
                <div class="product-badges">
                    @if (item.IsHot == true)
                    {
                        <span class="badge bg-danger">
                            <i class="fas fa-fire me-1"></i>HOT
                        </span>
                    }
                    @if (item.IsBestSeller == true)
                    {
                        <span class="badge bg-success">
                            <i class="fas fa-star me-1"></i>Bán chạy
                        </span>
                    }
                </div>
                <div class="product-image-container">
                    <img src="@item.ImageUrl" class="card-img-top" alt="@item.Name" />
                </div>
                
                <a asp-action="Details" asp-route-id="@item.ProductId" class="hover-button">
                    <i class="fas fa-eye me-2"></i>Xem chi tiết
                </a>
                
                <div class="card-body">
                    <h5 class="card-title">@item.Name</h5>
                    <div class="product-price">@item.Price.ToString("N0") đ</div>
                    <div class="product-category">
                        <i class="fas fa-tag"></i> @(item.Category?.Name ?? "Không phân loại")
                    </div>
                </div>
            </div>
        }
    </div>
    
    @if (!Model.Any())
    {
        <div class="empty-state">
            <i class="fas fa-box-open"></i>
            <h4>Không tìm thấy sản phẩm</h4>
            <p>Không có sản phẩm nào phù hợp với tiêu chí tìm kiếm của bạn.</p>
        </div>
    }
    
    <!-- Pagination -->
    @if (totalPages > 1)
    {
        <div class="pagination-section">
            <div class="pagination">
                @if (currentPage > 1)
                {
                    <a asp-action="Index" 
                       asp-route-page="@(currentPage - 1)"
                       asp-route-category="@currentCategory"
                       asp-route-sortBy="@currentSort">
                        <i class="fas fa-chevron-left"></i>
                    </a>
                }
                
                @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                {
                    @if (i == currentPage)
                    {
                        <span class="current">@i</span>
                    }
                    else
                    {
                        <a asp-action="Index" 
                           asp-route-page="@i"
                           asp-route-category="@currentCategory"
                           asp-route-sortBy="@currentSort">@i</a>
                    }
                }
                
                @if (currentPage < totalPages)
                {
                    <a asp-action="Index" 
                       asp-route-page="@(currentPage + 1)"
                       asp-route-category="@currentCategory"
                       asp-route-sortBy="@currentSort">
                        <i class="fas fa-chevron-right"></i>
                    </a>
                }
            </div>
            
            <div class="pagination-info">
                Trang @currentPage của @totalPages
            </div>
        </div>
    }
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('searchInput');
    const searchSuggestions = document.getElementById('searchSuggestions');
    let searchTimeout;
    
    // Search suggestions
    searchInput.addEventListener('input', function(e) {
        const term = e.target.value.trim();
        
        clearTimeout(searchTimeout);
        
        if (term.length >= 2) {
            searchTimeout = setTimeout(() => {
                fetchSuggestions(term);
            }, 300);
        } else {
            hideSuggestions();
        }
    });
    
    // Hide suggestions when clicking outside
    document.addEventListener('click', function(e) {
        if (!searchInput.contains(e.target) && !searchSuggestions.contains(e.target)) {
            hideSuggestions();
        }
    });
    
    // Fetch search suggestions
    function fetchSuggestions(term) {
        fetch(`/Product/Suggestions?term=${encodeURIComponent(term)}`)
            .then(response => response.json())
            .then(data => {
                displaySuggestions(data);
            })
            .catch(error => {
                console.error('Error fetching suggestions:', error);
                hideSuggestions();
            });
    }
    
    // Display suggestions
    function displaySuggestions(suggestions) {
        if (!suggestions || suggestions.length === 0) {
            hideSuggestions();
            return;
        }
        
        searchSuggestions.innerHTML = '';
        
        suggestions.forEach(item => {
            const suggestionDiv = document.createElement('div');
            suggestionDiv.className = 'suggestion-item';
            suggestionDiv.innerHTML = `
                <img src="${item.image}" alt="${item.name}" onerror="this.src='/images/placeholder.jpg'">
                <div class="suggestion-content">
                    <div class="suggestion-name">${item.name}</div>
                    <div class="suggestion-details">${item.category} - ${item.price}đ</div>
                </div>
            `;
            
            suggestionDiv.addEventListener('click', function() {
                window.location.href = `/Product/Details/${item.id}`;
            });
            
            searchSuggestions.appendChild(suggestionDiv);
        });
        
        searchSuggestions.style.display = 'block';
    }
    
    // Hide suggestions
    function hideSuggestions() {
        searchSuggestions.style.display = 'none';
    }
    
    // Auto-submit form on filter change (optional)
    const filterSelects = document.querySelectorAll('.filter-select');
    filterSelects.forEach(select => {
        select.addEventListener('change', function() {
            // Uncomment if you want auto-submit on filter change
            // document.getElementById('searchForm').submit();
        });
    });
});
</script>