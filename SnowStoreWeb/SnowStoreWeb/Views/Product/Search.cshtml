@model IEnumerable<SnowStoreWeb.Models.Product>
@{
    ViewData["Title"] = ViewData["Title"] ?? "Kết quả tìm kiếm";
    var categories = ViewBag.Categories as List<SnowStoreWeb.Models.Category> ?? new List<SnowStoreWeb.Models.Category>();
    var currentPage = ViewBag.CurrentPage ?? 1;
    var totalPages = ViewBag.TotalPages ?? 1;
    var searchQuery = ViewBag.SearchQuery as string;
    var currentCategory = ViewBag.CurrentCategory as string;
    var currentSort = ViewBag.CurrentSort as string;
    var minPrice = ViewBag.MinPrice;
    var maxPrice = ViewBag.MaxPrice;
    var totalResults = ViewBag.TotalResults ?? 0;
}

<style>
/* Reuse styles from Index view - same CSS as above */
.products-container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 20px;
}

.search-results-header {
    text-align: center;
    margin-bottom: 30px;
    padding: 30px 0;
    background: linear-gradient(135deg, #27ae60 0%, #2ecc71 100%);
    border-radius: 20px;
    color: white;
    box-shadow: 0 10px 30px rgba(0,0,0,0.1);
}

.search-results-header h2 {
    font-size: 2rem;
    font-weight: 700;
    margin-bottom: 10px;
    text-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.search-results-header p {
    font-size: 1rem;
    opacity: 0.9;
    margin: 0;
}

.search-query-highlight {
    background: rgba(255,255,255,0.2);
    padding: 4px 8px;
    border-radius: 8px;
    font-weight: 700;
}

.advanced-search-section {
    background: white;
    border-radius: 20px;
    padding: 25px;
    margin-bottom: 25px;
    box-shadow: 0 8px 25px rgba(0,0,0,0.08);
    border: 2px solid rgba(0,0,0,0.05);
}

.advanced-search-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 20px;
}

.advanced-search-header h4 {
    margin: 0;
    color: #2c3e50;
    font-weight: 700;
    font-size: 1.2rem;
    display: flex;
    align-items: center;
    gap: 10px;
}

.toggle-advanced {
    background: none;
    border: none;
    color: #5DADE2;
    cursor: pointer;
    font-size: 0.9rem;
    font-weight: 600;
    padding: 8px 15px;
    border-radius: 8px;
    transition: all 0.3s ease;
}

.toggle-advanced:hover {
    background: #f8f9fa;
}

.advanced-filters {
    display: grid;
    grid-template-columns: 2fr 1fr 1fr 1fr 1fr auto;
    gap: 15px;
    align-items: end;
}

.price-range-group {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 10px;
}

.price-input {
    padding: 10px 15px;
    border: 2px solid #e1e8ed;
    border-radius: 10px;
    font-size: 0.9rem;
    background: #f8f9fa;
}

.price-input:focus {
    outline: none;
    border-color: #5DADE2;
    background: white;
}

.search-group {
    position: relative;
}

.search-input {
    width: 100%;
    padding: 12px 15px 12px 40px;
    border: 2px solid #e1e8ed;
    border-radius: 15px;
    font-size: 1rem;
    transition: all 0.3s ease;
    background: #f8f9fa;
}

.search-input:focus {
    outline: none;
    border-color: #5DADE2;
    background: white;
    box-shadow: 0 0 0 3px rgba(93, 173, 226, 0.1);
}

.search-icon {
    position: absolute;
    left: 15px;
    top: 50%;
    transform: translateY(-50%);
    color: #95a5a6;
    font-size: 1rem;
}

.filter-select {
    padding: 12px 15px;
    border: 2px solid #e1e8ed;
    border-radius: 10px;
    font-size: 0.9rem;
    background: #f8f9fa;
    cursor: pointer;
    transition: all 0.3s ease;
}

.filter-select:focus {
    outline: none;
    border-color: #5DADE2;
    background: white;
}

.search-btn {
    padding: 12px 20px;
    background: linear-gradient(135deg, #5DADE2 0%, #3498db 100%);
    color: white;
    border: none;
    border-radius: 10px;
    cursor: pointer;
    font-weight: 600;
    transition: all 0.3s ease;
    white-space: nowrap;
}

.search-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(93, 173, 226, 0.3);
}

.clear-filters-btn {
    padding: 12px 20px;
    background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);
    color: white;
    border: none;
    border-radius: 10px;
    cursor: pointer;
    font-weight: 600;
    transition: all 0.3s ease;
    white-space: nowrap;
    text-decoration: none;
    display: inline-block;
    text-align: center;
}

.clear-filters-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(231, 76, 60, 0.3);
    color: white;
}

.results-summary {
    background: #f8f9fa;
    border-radius: 15px;
    padding: 20px;
    margin-bottom: 25px;
    border-left: 4px solid #5DADE2;
}

.results-summary h5 {
    color: #2c3e50;
    margin-bottom: 15px;
    font-weight: 700;
}

.active-filters {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    margin-bottom: 15px;
}

.filter-tag {
    background: linear-gradient(135deg, #5DADE2 0%, #3498db 100%);
    color: white;
    padding: 6px 12px;
    border-radius: 15px;
    font-size: 0.8rem;
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: 6px;
}

.filter-tag .remove-filter {
    cursor: pointer;
    background: rgba(255,255,255,0.3);
    border-radius: 50%;
    width: 16px;
    height: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.7rem;
    transition: all 0.2s ease;
}

.filter-tag .remove-filter:hover {
    background: rgba(255,255,255,0.5);
}

.results-count {
    color: #7f8c8d;
    font-weight: 600;
}

/* Product grid and cards - same as index */
.product-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 25px;
    padding: 20px 0;
}

.product-card {
    background: white;
    border-radius: 20px;
    overflow: hidden;
    box-shadow: 0 8px 25px rgba(0,0,0,0.08);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    border: 2px solid rgba(0,0,0,0.05);
    aspect-ratio: 5/7;
    width: 100%;
}

.product-card:hover {
    transform: translateY(-10px);
    box-shadow: 0 20px 40px rgba(0,0,0,0.15);
}

.product-image-container {
    position: relative;
    overflow: hidden;
    height: 100%;
    background: linear-gradient(45deg, #f8f9fa, #e9ecef);
}

.product-image-container img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
}

.product-card:hover .product-image-container img {
    transform: scale(1.05);
}

.product-badges {
    position: absolute;
    top: 15px;
    left: -6px;
    display: flex;
    flex-direction: column;
    gap: 8px;
    z-index: 5;
}

.product-badges .badge {
    font-size: 0.7rem;
    padding: 5px 10px;
    border-radius: 20px;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.2);
}

.badge.bg-danger {
    background: #ff4444 !important;
    color: white !important;
}

.badge.bg-success {
    background: #ff6b35 !important;
    color: white !important;
}

.card-body {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    padding: 15px;
    backdrop-filter: blur(8px);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: 2;
    height: auto;
    max-height: 60px;
    overflow: hidden;
}

.product-card:hover .card-body {
    background: rgba(0, 0, 0, 0.85);
    backdrop-filter: blur(5px);
    padding: 15px;
    max-height: 150px;
    transform: translateY(0px);
}

.card-title {
    font-size: 1.45rem;
    font-weight: 700;
    background: linear-gradient(135deg, #FFD700, #FF8C00, #FF6347);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin-bottom: 0;
    line-height: 1.3;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    text-align: left;
    filter: drop-shadow(1px 1px 2px rgba(0,0,0,0.7)) drop-shadow(2px 2px 4px rgba(0,0,0,0.5));
}

.product-card:hover .card-title {
    background: linear-gradient(135deg, #fff, #f0f0f0);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    font-size: 1.1rem;
    margin-bottom: 10px;
    transform: translateY(-5px);
    filter: drop-shadow(1px 1px 3px rgba(0,0,0,0.8));
}

.product-price {
    font-size: 1.2rem;
    font-weight: 700;
    color: #ff6b6b;
    margin-bottom: 5px;
    transition: all 0.4s ease;
    opacity: 0;
    transform: translateY(10px);
}

.product-card:hover .product-price {
    opacity: 1;
    transform: translateY(0);
    transition-delay: 0.1s;
}

.product-category {
    color: rgba(255, 255, 255, 0.8);
    font-size: 0.85rem;
    display: flex;
    align-items: center;
    gap: 6px;
    margin-top: 5px;
    transition: all 0.4s ease;
    opacity: 0;
    transform: translateY(10px);
}

.product-card:hover .product-category {
    opacity: 1;
    transform: translateY(0);
    transition-delay: 0.2s;
}

.product-category i {
    color: #5DADE2;
}

.hover-button {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    opacity: 0;
    transition: all 0.3s ease;
    background: linear-gradient(135deg, #5DADE2 0%, #3498db 100%);
    color: white;
    padding: 10px 20px;
    border-radius: 25px;
    text-decoration: none;
    font-weight: 600;
    font-size: 0.85rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    box-shadow: 0 4px 15px rgba(93, 173, 226, 0.3);
    z-index: 3;
    white-space: nowrap; 
}

.product-card:hover .hover-button {
    opacity: 1;
}

.hover-button:hover {
    background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);
    color: white;
    transform: translate(-50%, -50%) translateY(-2px);
    box-shadow: 0 6px 20px rgba(93, 173, 226, 0.4);
}

/* Pagination - same as index */
.pagination-section {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 40px 0;
    gap: 20px;
}

.pagination {
    display: flex;
    gap: 8px;
    align-items: center;
}

.pagination a, .pagination span {
    padding: 12px 16px;
    text-decoration: none;
    border-radius: 10px;
    font-weight: 600;
    transition: all 0.3s ease;
    min-width: 45px;
    text-align: center;
}

.pagination a {
    background: white;
    color: #5DADE2;
    border: 2px solid #e1e8ed;
}

.pagination a:hover {
    background: #5DADE2;
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(93, 173, 226, 0.3);
}

.pagination .current {
    background: linear-gradient(135deg, #5DADE2 0%, #3498db 100%);
    color: white;
    border: 2px solid #5DADE2;
}

.pagination-info {
    color: #7f8c8d;
    font-weight: 600;
}

.empty-state {
    text-align: center;
    padding: 80px 20px;
    background: white;
    border-radius: 20px;
    box-shadow: 0 8px 25px rgba(0,0,0,0.08);
    margin: 40px 0;
    grid-column: 1 / -1;
}

.empty-state i {
    font-size: 4rem;
    color: #bdc3c7;
    margin-bottom: 20px;
    display: block;
}

.empty-state h4 {
    color: #7f8c8d;
    font-weight: 600;
    margin-bottom: 10px;
}

.empty-state p {
    color: #95a5a6;
    font-size: 1rem;
    margin: 0;
}

/* Responsive Design */
@@media (max-width: 768px) {
    .advanced-filters {
        grid-template-columns: 1fr;
        gap: 12px;
    }
    
    .price-range-group {
        grid-template-columns: 1fr 1fr;
    }
    
    .advanced-search-section {
        padding: 15px;
    }
    
    .search-input, .filter-select, .price-input {
        padding: 10px 12px;
    }
    
    .search-input {
        padding-left: 35px;
    }
    
    .search-btn, .clear-filters-btn {
        width: 100%;
        padding: 10px 15px;
    }
}
</style>

<div class="products-container">
    <!-- Search Results Header -->
    <div class="search-results-header">
        <h2>
            <i class="fas fa-search me-3"></i>
            Kết quả tìm kiếm
        </h2>
        <p>
            @if (!string.IsNullOrEmpty(searchQuery))
            {
                <span>Từ khóa: <span class="search-query-highlight">"@searchQuery"</span></span>
            }
            @if (totalResults > 0)
            {
                <span> - Tìm thấy @totalResults sản phẩm</span>
            }
        </p>
    </div>
    
    <!-- Advanced Search Section -->
    <div class="advanced-search-section">
        <div class="advanced-search-header">
            <h4>
                <i class="fas fa-sliders-h"></i>
                Tìm kiếm nâng cao
            </h4>
            <button type="button" class="toggle-advanced" onclick="toggleAdvancedSearch()">
                <i class="fas fa-chevron-down" id="toggleIcon"></i>
                Thu gọn
            </button>
        </div>
        
        <form asp-action="Search" method="get" class="advanced-filters" id="advancedFilters">
            <div class="search-group">
                <i class="fas fa-search search-icon"></i>
                <input type="text" name="query" class="search-input" 
                       placeholder="Nhập từ khóa tìm kiếm..." 
                       value="@searchQuery">
            </div>

            <select name="category" class="filter-select">
                <option value="">Tất cả danh mục</option>
                @foreach (var category in categories)
                {
                    @if (currentCategory == category.Name)
                    {
                        <option value="@category.Name" selected>@category.Name</option>
                    }
                    else
                    {
                        <option value="@category.Name">@category.Name</option>
                    }
                }
            </select>
            
            <div class="price-range-group">
                <input type="number" name="minPrice" class="price-input" 
                       placeholder="Giá từ" value="@minPrice" min="0" step="1000">
                <input type="number" name="maxPrice" class="price-input" 
                       placeholder="Giá đến" value="@maxPrice" min="0" step="1000">
            </div>
            
            <select name="sortBy" class="filter-select">
                <option value="">Sắp xếp mặc định</option>
                @if (currentSort == "name_asc")
                {
                    <option value="name_asc" selected>Tên A-Z</option>
                }
                else
                {
                    <option value="name_asc">Tên A-Z</option>
                }
                
                @if (currentSort == "name_desc")
                {
                    <option value="name_desc" selected>Tên Z-A</option>
                }
                else
                {
                    <option value="name_desc">Tên Z-A</option>
                }
                
                @if (currentSort == "price_asc")
                {
                    <option value="price_asc" selected>Giá thấp đến cao</option>
                }
                else
                {
                    <option value="price_asc">Giá thấp đến cao</option>
                }
                
                @if (currentSort == "price_desc")
                {
                    <option value="price_desc" selected>Giá cao đến thấp</option>
                }
                else
                {
                    <option value="price_desc">Giá cao đến thấp</option>
                }
                
                @if (currentSort == "newest")
                {
                    <option value="newest" selected>Mới nhất</option>
                }
                else
                {
                    <option value="newest">Mới nhất</option>
                }
            </select>
            
            <div style="display: flex; gap: 8px;">
                <button type="submit" class="search-btn">
                    <i class="fas fa-search"></i>
                </button>
                
                <a asp-action="Index" class="clear-filters-btn">
                    <i class="fas fa-times"></i>
                </a>
            </div>
        </form>
    </div>
    
    <!-- Results Summary -->
    @if (!string.IsNullOrEmpty(searchQuery) || !string.IsNullOrEmpty(currentCategory) || minPrice != null || maxPrice != null)
    {
        <div class="results-summary">
            <h5>
                <i class="fas fa-filter me-2"></i>
                Bộ lọc đang áp dụng
            </h5>
            
            <div class="active-filters">
                @if (!string.IsNullOrEmpty(searchQuery))
                {
                    <div class="filter-tag">
                        <i class="fas fa-search"></i>
                        <span>Từ khóa: "@searchQuery"</span>
                        <span class="remove-filter" onclick="removeFilter('query')" title="Xóa bộ lọc">×</span>
                    </div>
                }
                
                @if (!string.IsNullOrEmpty(currentCategory))
                {
                    <div class="filter-tag">
                        <i class="fas fa-tag"></i>
                        <span>Danh mục: @currentCategory</span>
                        <span class="remove-filter" onclick="removeFilter('category')" title="Xóa bộ lọc">×</span>
                    </div>
                }
                
                @if (minPrice != null || maxPrice != null)
                {
                    <div class="filter-tag">
                        <i class="fas fa-dollar-sign"></i>
                        <span>
                            Giá: 
                            @if (minPrice != null && maxPrice != null)
                            {
                                <text>@(((decimal)minPrice).ToString("N0"))đ - @(((decimal)maxPrice).ToString("N0"))đ</text>
                            }
                            else if (minPrice != null)
                            {
                                <text>Từ @(((decimal)minPrice).ToString("N0"))đ</text>
                            }
                            else
                            {
                                <text>Đến @(((decimal)maxPrice).ToString("N0"))đ</text>
                            }
                        </span>
                        <span class="remove-filter" onclick="removeFilter('price')" title="Xóa bộ lọc">×</span>
                    </div>
                }
            </div>
            
            <div class="results-count">
                <strong>@totalResults</strong> sản phẩm được tìm thấy
            </div>
        </div>
    }
    
    <!-- Product Grid -->
    <div class="product-grid">
        @foreach (var item in Model)
        {
            <div class="product-card">
                <div class="product-badges">
                    @if (item.IsHot == true)
                    {
                        <span class="badge bg-danger">
                            <i class="fas fa-fire me-1"></i>HOT
                        </span>
                    }
                    @if (item.IsBestSeller == true)
                    {
                        <span class="badge bg-success">
                            <i class="fas fa-star me-1"></i>Bán chạy
                        </span>
                    }
                </div>
                <div class="product-image-container">
                    <img src="@item.ImageUrl" class="card-img-top" alt="@item.Name" />
                </div>
                
                <a asp-action="Details" asp-route-id="@item.ProductId" class="hover-button">
                    <i class="fas fa-eye me-2"></i>Xem chi tiết
                </a>
                
                <div class="card-body">
                    <h5 class="card-title">@item.Name</h5>
                    <div class="product-price">@item.Price.ToString("N0") đ</div>
                    <div class="product-category">
                        <i class="fas fa-tag"></i> @(item.Category?.Name ?? "Không phân loại")
                    </div>
                </div>
            </div>
        }
    </div>
    
    <!-- Empty State -->
    @if (!Model.Any())
    {
        <div class="empty-state">
            <i class="fas fa-search"></i>
            <h4>Không tìm thấy sản phẩm</h4>
            <p>
                @if (!string.IsNullOrEmpty(searchQuery))
                {
                    <text>Không có sản phẩm nào phù hợp với từ khóa "<strong>@searchQuery</strong>".</text>
                }
                else
                {
                    <text>Không có sản phẩm nào phù hợp với tiêu chí tìm kiếm của bạn.</text>
                }
                <br>Hãy thử:
            </p>
            <ul style="text-align: left; display: inline-block; margin-top: 15px;">
                <li>Kiểm tra lại từ khóa tìm kiếm</li>
                <li>Sử dụng từ khóa khác</li>
                <li>Mở rộng khoảng giá</li>
                <li>Chọn danh mục khác</li>
            </ul>
        </div>
    }
    
    <!-- Pagination -->
    @if (totalPages > 1)
    {
        <div class="pagination-section">
            <div class="pagination">
                @if (currentPage > 1)
                {
                    <a asp-action="Search" 
                       asp-route-page="@(currentPage - 1)"
                       asp-route-query="@searchQuery"
                       asp-route-category="@currentCategory"
                       asp-route-sortBy="@currentSort"
                       asp-route-minPrice="@minPrice"
                       asp-route-maxPrice="@maxPrice">
                        <i class="fas fa-chevron-left"></i>
                    </a>
                }
                
                @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                {
                    @if (i == currentPage)
                    {
                        <span class="current">@i</span>
                    }
                    else
                    {
                        <a asp-action="Search" 
                           asp-route-page="@i"
                           asp-route-query="@searchQuery"
                           asp-route-category="@currentCategory"
                           asp-route-sortBy="@currentSort"
                           asp-route-minPrice="@minPrice"
                           asp-route-maxPrice="@maxPrice">@i</a>
                    }
                }
                
                @if (currentPage < totalPages)
                {
                    <a asp-action="Search" 
                       asp-route-page="@(currentPage + 1)"
                       asp-route-query="@searchQuery"
                       asp-route-category="@currentCategory"
                       asp-route-sortBy="@currentSort"
                       asp-route-minPrice="@minPrice"
                       asp-route-maxPrice="@maxPrice">
                        <i class="fas fa-chevron-right"></i>
                    </a>
                }
            </div>
            
            <div class="pagination-info">
                Trang @currentPage của @totalPages
            </div>
        </div>
    }
</div>

<script>
let advancedSearchVisible = true;

function toggleAdvancedSearch() {
    const filters = document.getElementById('advancedFilters');
    const icon = document.getElementById('toggleIcon');
    const button = document.querySelector('.toggle-advanced');
    
    if (advancedSearchVisible) {
        filters.style.display = 'none';
        icon.className = 'fas fa-chevron-right';
        button.innerHTML = '<i class="fas fa-chevron-right" id="toggleIcon"></i> Mở rộng';
        advancedSearchVisible = false;
    } else {
        filters.style.display = 'grid';
        icon.className = 'fas fa-chevron-down';
        button.innerHTML = '<i class="fas fa-chevron-down" id="toggleIcon"></i> Thu gọn';
        advancedSearchVisible = true;
    }
}

function removeFilter(filterType) {
    const form = document.getElementById('advancedFilters');
    const formData = new FormData(form);
    
    // Remove specific filter
    switch(filterType) {
        case 'query':
            formData.delete('query');
            break;
        case 'category':
            formData.delete('category');
            break;
        case 'price':
            formData.delete('minPrice');
            formData.delete('maxPrice');
            break;
    }
    
    // Build new URL
    const params = new URLSearchParams();
    for (let [key, value] of formData.entries()) {
        if (value) params.append(key, value);
    }
    
    // Redirect
    window.location.href = '/Product/Search?' + params.toString();
}

// Auto-format price inputs
document.addEventListener('DOMContentLoaded', function() {
    const priceInputs = document.querySelectorAll('.price-input[type="number"]');
    
    priceInputs.forEach(input => {
        input.addEventListener('input', function(e) {
            // Remove non-numeric characters except for decimal point
            let value = e.target.value.replace(/[^\d]/g, '');
            
            // Format with thousands separator
            if (value) {
                e.target.value = parseInt(value).toLocaleString('vi-VN');
            }
        });
        
        input.addEventListener('blur', function(e) {
            // Convert back to number for form submission
            let value = e.target.value.replace(/[^\d]/g, '');
            e.target.value = value;
        });
    });
});
</script>